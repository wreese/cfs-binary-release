// Code generated by protoc-gen-go.
// source: value_api.proto
// DO NOT EDIT!

/*
Package valueproto is a generated protocol buffer package.

It is generated from these files:
	value_api.proto

It has these top-level messages:
	EmptyMsg
	WriteRequest
	LookupRequest
	ReadRequest
	DeleteRequest
	WriteResponse
	LookupResponse
	ReadResponse
	DeleteResponse
*/
package valueproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type EmptyMsg struct {
}

func (m *EmptyMsg) Reset()                    { *m = EmptyMsg{} }
func (m *EmptyMsg) String() string            { return proto.CompactTextString(m) }
func (*EmptyMsg) ProtoMessage()               {}
func (*EmptyMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type WriteRequest struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA           uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB           uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
	Value          []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMicro int64  `protobuf:"varint,5,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LookupRequest struct {
	Rpcid uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA  uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB  uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadRequest struct {
	Rpcid uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA  uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB  uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeleteRequest struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA           uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB           uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
	TimestampMicro int64  `protobuf:"varint,4,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type WriteResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Err            string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type LookupResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Length         uint32 `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	Err            string `protobuf:"bytes,4,opt,name=err" json:"err,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ReadResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Value          []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Err            string `protobuf:"bytes,4,opt,name=err" json:"err,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Err            string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*EmptyMsg)(nil), "valueproto.EmptyMsg")
	proto.RegisterType((*WriteRequest)(nil), "valueproto.WriteRequest")
	proto.RegisterType((*LookupRequest)(nil), "valueproto.LookupRequest")
	proto.RegisterType((*ReadRequest)(nil), "valueproto.ReadRequest")
	proto.RegisterType((*DeleteRequest)(nil), "valueproto.DeleteRequest")
	proto.RegisterType((*WriteResponse)(nil), "valueproto.WriteResponse")
	proto.RegisterType((*LookupResponse)(nil), "valueproto.LookupResponse")
	proto.RegisterType((*ReadResponse)(nil), "valueproto.ReadResponse")
	proto.RegisterType((*DeleteResponse)(nil), "valueproto.DeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for ValueStore service

type ValueStoreClient interface {
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	StreamWrite(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamWriteClient, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	StreamLookup(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamLookupClient, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	StreamRead(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamReadClient, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	StreamDelete(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamDeleteClient, error)
}

type valueStoreClient struct {
	cc *grpc.ClientConn
}

func NewValueStoreClient(cc *grpc.ClientConn) ValueStoreClient {
	return &valueStoreClient{cc}
}

func (c *valueStoreClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/valueproto.ValueStore/Write", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueStoreClient) StreamWrite(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamWriteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[0], c.cc, "/valueproto.ValueStore/StreamWrite", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreStreamWriteClient{stream}
	return x, nil
}

type ValueStore_StreamWriteClient interface {
	Send(*WriteRequest) error
	Recv() (*WriteResponse, error)
	grpc.ClientStream
}

type valueStoreStreamWriteClient struct {
	grpc.ClientStream
}

func (x *valueStoreStreamWriteClient) Send(m *WriteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreStreamWriteClient) Recv() (*WriteResponse, error) {
	m := new(WriteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := grpc.Invoke(ctx, "/valueproto.ValueStore/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueStoreClient) StreamLookup(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamLookupClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[1], c.cc, "/valueproto.ValueStore/StreamLookup", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreStreamLookupClient{stream}
	return x, nil
}

type ValueStore_StreamLookupClient interface {
	Send(*LookupRequest) error
	Recv() (*LookupResponse, error)
	grpc.ClientStream
}

type valueStoreStreamLookupClient struct {
	grpc.ClientStream
}

func (x *valueStoreStreamLookupClient) Send(m *LookupRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreStreamLookupClient) Recv() (*LookupResponse, error) {
	m := new(LookupResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/valueproto.ValueStore/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueStoreClient) StreamRead(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamReadClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[2], c.cc, "/valueproto.ValueStore/StreamRead", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreStreamReadClient{stream}
	return x, nil
}

type ValueStore_StreamReadClient interface {
	Send(*ReadRequest) error
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type valueStoreStreamReadClient struct {
	grpc.ClientStream
}

func (x *valueStoreStreamReadClient) Send(m *ReadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreStreamReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/valueproto.ValueStore/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueStoreClient) StreamDelete(ctx context.Context, opts ...grpc.CallOption) (ValueStore_StreamDeleteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[3], c.cc, "/valueproto.ValueStore/StreamDelete", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreStreamDeleteClient{stream}
	return x, nil
}

type ValueStore_StreamDeleteClient interface {
	Send(*DeleteRequest) error
	Recv() (*DeleteResponse, error)
	grpc.ClientStream
}

type valueStoreStreamDeleteClient struct {
	grpc.ClientStream
}

func (x *valueStoreStreamDeleteClient) Send(m *DeleteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreStreamDeleteClient) Recv() (*DeleteResponse, error) {
	m := new(DeleteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ValueStore service

type ValueStoreServer interface {
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	StreamWrite(ValueStore_StreamWriteServer) error
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	StreamLookup(ValueStore_StreamLookupServer) error
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	StreamRead(ValueStore_StreamReadServer) error
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	StreamDelete(ValueStore_StreamDeleteServer) error
}

func RegisterValueStoreServer(s *grpc.Server, srv ValueStoreServer) {
	s.RegisterService(&_ValueStore_serviceDesc, srv)
}

func _ValueStore_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueStoreServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/valueproto.ValueStore/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueStoreServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueStore_StreamWrite_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).StreamWrite(&valueStoreStreamWriteServer{stream})
}

type ValueStore_StreamWriteServer interface {
	Send(*WriteResponse) error
	Recv() (*WriteRequest, error)
	grpc.ServerStream
}

type valueStoreStreamWriteServer struct {
	grpc.ServerStream
}

func (x *valueStoreStreamWriteServer) Send(m *WriteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreStreamWriteServer) Recv() (*WriteRequest, error) {
	m := new(WriteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueStoreServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/valueproto.ValueStore/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueStoreServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueStore_StreamLookup_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).StreamLookup(&valueStoreStreamLookupServer{stream})
}

type ValueStore_StreamLookupServer interface {
	Send(*LookupResponse) error
	Recv() (*LookupRequest, error)
	grpc.ServerStream
}

type valueStoreStreamLookupServer struct {
	grpc.ServerStream
}

func (x *valueStoreStreamLookupServer) Send(m *LookupResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreStreamLookupServer) Recv() (*LookupRequest, error) {
	m := new(LookupRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueStoreServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/valueproto.ValueStore/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueStoreServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueStore_StreamRead_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).StreamRead(&valueStoreStreamReadServer{stream})
}

type ValueStore_StreamReadServer interface {
	Send(*ReadResponse) error
	Recv() (*ReadRequest, error)
	grpc.ServerStream
}

type valueStoreStreamReadServer struct {
	grpc.ServerStream
}

func (x *valueStoreStreamReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreStreamReadServer) Recv() (*ReadRequest, error) {
	m := new(ReadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueStoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/valueproto.ValueStore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueStoreServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueStore_StreamDelete_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).StreamDelete(&valueStoreStreamDeleteServer{stream})
}

type ValueStore_StreamDeleteServer interface {
	Send(*DeleteResponse) error
	Recv() (*DeleteRequest, error)
	grpc.ServerStream
}

type valueStoreStreamDeleteServer struct {
	grpc.ServerStream
}

func (x *valueStoreStreamDeleteServer) Send(m *DeleteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreStreamDeleteServer) Recv() (*DeleteRequest, error) {
	m := new(DeleteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ValueStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "valueproto.ValueStore",
	HandlerType: (*ValueStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _ValueStore_Write_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _ValueStore_Lookup_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ValueStore_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ValueStore_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamWrite",
			Handler:       _ValueStore_StreamWrite_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamLookup",
			Handler:       _ValueStore_StreamLookup_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamRead",
			Handler:       _ValueStore_StreamRead_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamDelete",
			Handler:       _ValueStore_StreamDelete_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x53, 0xc1, 0x4e, 0xea, 0x40,
	0x14, 0x7d, 0xa5, 0x85, 0xbc, 0x77, 0x69, 0x79, 0x66, 0x62, 0xb4, 0x76, 0x65, 0xba, 0x30, 0xac,
	0x88, 0xd1, 0xa5, 0x89, 0x09, 0x44, 0x12, 0x13, 0x64, 0x33, 0x24, 0xba, 0xc4, 0x0a, 0x13, 0x6c,
	0xa0, 0xcc, 0x38, 0x9d, 0x1a, 0xf9, 0x05, 0x3f, 0xc9, 0xaf, 0xb3, 0x9d, 0xa1, 0xa5, 0xb5, 0x75,
	0x23, 0x75, 0x37, 0x73, 0x6e, 0x7b, 0xce, 0x99, 0x73, 0xef, 0x85, 0xff, 0xaf, 0xde, 0x2a, 0x22,
	0x53, 0x8f, 0xf9, 0x3d, 0xc6, 0xa9, 0xa0, 0x08, 0x24, 0x20, 0xcf, 0x2e, 0xc0, 0xdf, 0x61, 0xc0,
	0xc4, 0x66, 0x1c, 0x2e, 0xdc, 0x77, 0x0d, 0xcc, 0x07, 0xee, 0x0b, 0x82, 0xc9, 0x4b, 0x44, 0x42,
	0x81, 0x0e, 0xa1, 0xc9, 0xd9, 0xcc, 0x9f, 0xdb, 0xda, 0xa9, 0xd6, 0xb5, 0xb0, 0xba, 0x20, 0x04,
	0xc6, 0x92, 0x6c, 0xfa, 0x76, 0x23, 0x06, 0x0d, 0x2c, 0xcf, 0x5b, 0x6c, 0x60, 0xeb, 0x19, 0x36,
	0x48, 0xfe, 0x96, 0x42, 0xb6, 0x11, 0x83, 0x26, 0x56, 0x17, 0x74, 0x06, 0x1d, 0xe1, 0x07, 0x31,
	0xbb, 0x17, 0xb0, 0xb1, 0x3f, 0xe3, 0xd4, 0x6e, 0xc6, 0x65, 0x1d, 0x7f, 0x41, 0xdd, 0x31, 0x58,
	0x77, 0x94, 0x2e, 0x23, 0x56, 0x8b, 0x19, 0x77, 0x04, 0x6d, 0x4c, 0xbc, 0x79, 0x3d, 0x64, 0x11,
	0x58, 0x37, 0x64, 0x45, 0xea, 0x0a, 0xaa, 0x1c, 0x89, 0x51, 0x19, 0xc9, 0x14, 0xac, 0x6d, 0x7b,
	0x42, 0x46, 0xd7, 0x21, 0xf9, 0x46, 0xb6, 0x4c, 0xd7, 0xa8, 0xa2, 0x43, 0x07, 0xa0, 0x13, 0xce,
	0xa5, 0x93, 0x7f, 0x38, 0x39, 0xba, 0x6f, 0xd0, 0x49, 0x33, 0xaf, 0x45, 0xe1, 0x08, 0x5a, 0x2b,
	0xb2, 0x5e, 0x88, 0x67, 0x29, 0x62, 0xe1, 0xed, 0x2d, 0x55, 0x36, 0x76, 0xca, 0x02, 0x4c, 0xd5,
	0x9e, 0x5a, 0x74, 0xb3, 0xc9, 0xd3, 0xf3, 0x93, 0x57, 0x56, 0x7d, 0x84, 0x4e, 0xda, 0xc7, 0xdf,
	0x49, 0xf4, 0xe2, 0xc3, 0x00, 0xb8, 0x4f, 0xd4, 0x27, 0x82, 0x72, 0x82, 0xae, 0xa1, 0x29, 0x3b,
	0x88, 0xec, 0xde, 0x6e, 0x07, 0x7b, 0xf9, 0x9d, 0x73, 0x4e, 0x2a, 0x2a, 0xca, 0x9c, 0xfb, 0x07,
	0xdd, 0x42, 0x7b, 0x22, 0x38, 0xf1, 0x82, 0x7d, 0x58, 0xba, 0xda, 0xb9, 0x86, 0xfa, 0xd0, 0x52,
	0xad, 0x46, 0x85, 0x4f, 0x0b, 0x2b, 0xe7, 0x38, 0x55, 0xa5, 0xcc, 0xcc, 0x08, 0x4c, 0x65, 0x66,
	0x4f, 0x22, 0xe9, 0xe7, 0x0a, 0x8c, 0x64, 0x00, 0xd0, 0x71, 0xfe, 0xcb, 0xdc, 0xc6, 0x3a, 0x76,
	0xb9, 0x90, 0x39, 0x19, 0x02, 0x28, 0x27, 0x3f, 0xa6, 0x48, 0x33, 0x51, 0xe3, 0x50, 0x7c, 0x4a,
	0x61, 0xd5, 0x8b, 0x4f, 0x29, 0x4e, 0x4f, 0x3e, 0x93, 0x3d, 0x89, 0x12, 0x3f, 0x4f, 0x2d, 0x59,
	0xbb, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xa0, 0x45, 0x1a, 0xc1, 0x05, 0x00, 0x00,
}
